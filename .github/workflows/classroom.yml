name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Build images
        timeout-minutes: 10
        run: |
          docker-compose build postgres
          docker-compose build api-gateway
          docker-compose build flight-service
          docker-compose build bonus-service
          docker-compose build ticket-service
      - name: Setup db
        run: |
          docker-compose up -d postgres
          docker-compose logs postgres
          sleep 5
          cd postgres
          chmod +x ./create-test-db.sh  && ./create-test-db.sh
          cd ..

      - name: Run containers
        timeout-minutes: 10
        run: |
          docker-compose up -d ticket-service
          docker-compose up -d flight-service
          docker-compose up -d bonus-service
          docker-compose up -d api-gateway

          docker-compose logs ticket-service
          docker-compose logs flight-service
          docker-compose logs bonus-service
          docker-compose logs api-gateway
          chmod +x ./scripts/wait-script.sh  && ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Run Unit Tests
        run: |
          chmod +x ./create-test-db.sh  && ./create-test-db.sh
          python3 src/TicketService/itests/itests.py
          python3 src/FlightService/itests/itests.py
          python3 src/BonusService/itests/itests.py
      - name: publish
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          docker compose build
          docker push katyavarlamova/api-gateway
          docker push katyavarlamova/bonus-service
          docker push katyavarlamova/flight-service
          docker push katyavarlamova/ticket-service


      - name: Write out the kubeconfig info
        env:
          MY_SECRET: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$MY_SECRET" | base64 -d >> /tmp/config
          chmod 0600 /tmp/config

      - name: Instal deps
        run: curl -sSL https://hub.mcs.mail.ru/repository/client-keystone-auth/latest/linux/client-install.sh | bash

      - name: Deploy DB
        env:
          KUBECONFIG: /tmp/config
        run: |
          source ~/vk-cloud-solutions/path.bash.inc
          helm upgrade --install postgres ./kubernetes/postgres
      
      - name: Deploy API
        env:
          KUBECONFIG: /tmp/config
        run: |
          source ~/vk-cloud-solutions/path.bash.inc
          helm upgrade --install flights ./kubernetes/flights
          kubectl apply -f ./kubernetes/ingress.yaml

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v
